{"version":3,"file":"static/js/959.2479a487.chunk.js","mappings":"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","sources":["../../phase-4.1/pkg/fl_reversi_rs.js"],"sourcesContent":["let wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nexport function initialize() {\n    wasm.initialize();\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n * @param {string} board_str\n * @param {number} mv\n * @param {boolean} turn\n * @returns {string}\n */\nexport function update_board(board_str, mv, turn) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.update_board(ptr0, len0, mv, turn);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} board_str\n * @param {boolean} turn\n * @param {number} assigned_time_ms\n * @param {number} disturbance\n * @returns {number}\n */\nexport function get_ai_move(board_str, turn, assigned_time_ms, disturbance) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.get_ai_move(ptr0, len0, turn, assigned_time_ms, disturbance);\n    return ret >>> 0;\n}\n\n/**\n * @param {string} board_str\n * @param {boolean} turn\n * @returns {boolean}\n */\nexport function is_pass(board_str, turn) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.is_pass(ptr0, len0, turn);\n    return ret !== 0;\n}\n\n/**\n * @param {string} board_str\n * @returns {string}\n */\nexport function get_result(board_str) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.get_result(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} board_str\n * @param {boolean} turn\n * @returns {string}\n */\nexport function get_valid_moves(board_str, turn) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.get_valid_moves(ptr0, len0, turn);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} board_str\n * @param {number} mv\n * @param {boolean} turn\n * @returns {boolean}\n */\nexport function is_valid_move(board_str, mv, turn) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.is_valid_move(ptr0, len0, mv, turn);\n    return ret !== 0;\n}\n\n/**\n * @param {string} board_str\n * @returns {any}\n */\nexport function get_stone_counts(board_str) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.get_stone_counts(ptr0, len0);\n    return ret;\n}\n\n/**\n * @returns {number}\n */\nexport function test_eval_wasm_simple() {\n    const ret = wasm.test_eval_wasm_simple();\n    return ret;\n}\n\n/**\n * @returns {number}\n */\nexport function test_ai_move_simple() {\n    const ret = wasm.test_ai_move_simple();\n    return ret >>> 0;\n}\n\n/**\n * @returns {string}\n */\nexport function get_log() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const ret = wasm.get_log();\n        deferred1_0 = ret[0];\n        deferred1_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\nexport function clear_log() {\n    wasm.clear_log();\n}\n\n/**\n * @param {string} board_str\n * @param {boolean} turn\n * @param {string} context\n */\nexport function debug_board_state(board_str, turn, context) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(context, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.debug_board_state(ptr0, len0, turn, ptr1, len1);\n}\n\n/**\n * @param {string} board_str\n * @param {boolean} turn\n * @returns {number}\n */\nexport function test_corner_evaluation(board_str, turn) {\n    const ptr0 = passStringToWasm0(board_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.test_corner_evaluation(ptr0, len0, turn);\n    return ret;\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_getTime_46267b1c24877e30 = function(arg0) {\n        const ret = arg0.getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_getTimezoneOffset_6b5752021c499c47 = function(arg0) {\n        const ret = arg0.getTimezoneOffset();\n        return ret;\n    };\n    imports.wbg.__wbg_log_c222819a41e063d3 = function(arg0) {\n        console.log(arg0);\n    };\n    imports.wbg.__wbg_new0_f788a2397c7ca929 = function() {\n        const ret = new Date();\n        return ret;\n    };\n    imports.wbg.__wbg_new_31a97dac4f10fab7 = function(arg0) {\n        const ret = new Date(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_now_807e54c39636c349 = function() {\n        const ret = Date.now();\n        return ret;\n    };\n    imports.wbg.__wbg_random_3ad904d98382defe = function() {\n        const ret = Math.random();\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_0;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('fl_reversi_rs_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n"],"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","cachedUint8ArrayMemory0","getUint8ArrayMemory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","initialize","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encode","encodeString","encodeInto","arg","view","buf","set","read","length","written","passStringToWasm0","malloc","realloc","undefined","mem","offset","code","charCodeAt","slice","update_board","board_str","mv","turn","deferred2_0","deferred2_1","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ret","__wbindgen_free","get_ai_move","assigned_time_ms","disturbance","is_pass","get_result","get_valid_moves","is_valid_move","get_stone_counts","test_eval_wasm_simple","test_ai_move_simple","get_log","deferred1_0","deferred1_1","clear_log","debug_board_state","context","ptr1","len1","test_corner_evaluation","__wbg_get_imports","imports","wbg","__wbg_getTime_46267b1c24877e30","arg0","getTime","__wbg_getTimezoneOffset_6b5752021c499c47","getTimezoneOffset","__wbg_log_c222819a41e063d3","console","log","__wbg_new0_f788a2397c7ca929","Date","__wbg_new_31a97dac4f10fab7","__wbg_now_807e54c39636c349","now","__wbg_random_3ad904d98382defe","Math","random","__wbindgen_init_externref_table","table","__wbindgen_export_0","grow","__wbindgen_json_parse","arg1","JSON","parse","__wbindgen_number_new","__wbindgen_string_new","__wbindgen_throw","__wbg_finalize_init","instance","module","exports","__wbg_init","__wbindgen_wasm_module","__wbindgen_start","initSync","Object","getPrototypeOf","prototype","warn","WebAssembly","Module","Instance","async","module_or_path","URL","Request","fetch","Response","instantiateStreaming","e","headers","get","bytes","arrayBuffer","instantiate","__wbg_load"],"sourceRoot":""}